name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Kernel version'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILDPATH: /build
      CONFIGDIR: /config
      RELEASEDIR: /release
      PATCHDIR: /patches
      MAINTAINER: "GitHub Kernel Builder <ci@kernel>"
      LLVM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t kernel-builder .

      - name: Ensure required directories exist
        run: mkdir -p build release patches

      - name: Run Kernel Build
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/build:/build \
            -v ${{ github.workspace }}/release:/release \
            -v ${{ github.workspace }}/kernel-configs:/config \
            -v ${{ github.workspace }}/patches:/patches \
            -e BUILDPATH=/build \
            -e CONFIGDIR=/config \
            -e RELEASEDIR=/release \
            -e PATCHDIR=/patches \
            -e MAINTAINER="GitHub Kernel Builder <ghkernel@stargazer.at>" \
            -e LLVM=true \
            kernel-builder ${{ github.event.inputs.version }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-release
          path: release/

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: "Kernel Release v${{ github.event.inputs.version }}"
          draft: true
          prerelease: false
          body: |
            This release includes the following packages:
            
            • linux-headers  
            • linux-image  
            • linux-libc-dev
            
            **Configurations:**
            - **Vanilla:** The default configuration taken from a recent Debian kernel config and applied to the latest upstream kernel.
            - **VM:** An optimized configuration for virtual environments (VMware, VirtualBox, Hyper-V, Xen, KVM) with unnecessary drivers removed.

            **Automated Installation:**
            For convenient installs, use our Packagecloud repository:
            
            ```bash
            curl -s https://packagecloud.io/install/repositories/debian-kernels/buster/script.deb.sh | sudo bash
            ```
            
            Then install the desired kernel packages using your package manager.
            
            Enjoy your new kernel!
